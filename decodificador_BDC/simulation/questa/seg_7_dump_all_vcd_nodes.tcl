# Copyright (C) 2023  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and any partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel FPGA IP License Agreement, or other applicable license
# agreement, including, without limitation, that your use is for
# the sole purpose of programming logic devices manufactured by
# Intel and sold by Intel or its authorized distributors.  Please
# refer to the applicable agreement for further details, at
# https://fpgasoftware.intel.com/eula.


# ***************************************************************************
# ***************************************************************************
# 
# File:		/home/saao/repositorios/Repositorio_Github/Universidad Del Norte/diseño digital/decodificador_BDC/simulation/questa/seg_7_dump_all_vcd_nodes.tcl
# 
# Description:	Script for Questa Intel FPGA (VHDL) VCD File Dumping
# 		This script is used to direct Questa Intel FPGA (VHDL) to dump
# 		all nodes in the design to a VCD output file
# 
# Usages:	/home/saao/repositorios/Repositorio_Github/Universidad Del Norte/diseño digital/decodificador_BDC/simulation/questa/seg_7_dump_all_vcd_nodes.tcl
# 
# Generated by:	Quartus Prime
# 		Version 23.1std.0 Build 991 11/28/2023 SC Lite Edition
# 
# Date:		Wed Oct  2 21:08:50 2024
# 
# Design:	seg_7
# 
# ***************************************************************************
# ***************************************************************************

# ----------------------------------------------------------------
#
proc add_vcd_signals { hierarchy vcd_filename } {
#
# Description:	This function directs Questa Intel FPGA (VHDL) to print out the
#		appropriate VCD signals, with the hierarchy level
#		prepended to each signal name
#
# ----------------------------------------------------------------

   catch { vcd add "$hierarchy/fa_a0_combout" }
   catch { vcd add "$hierarchy/fb_a0_combout" }
   catch { vcd add "$hierarchy/fc_a0_combout" }
   catch { vcd add "$hierarchy/fd_a0_combout" }
   catch { vcd add "$hierarchy/fd_a1_combout" }
   catch { vcd add "$hierarchy/ff_a0_combout" }
   catch { vcd add "$hierarchy/fg_a0_combout" }
   catch { vcd add "$hierarchy/fa_aoutput_o" }
   catch { vcd add "$hierarchy/fb_aoutput_o" }
   catch { vcd add "$hierarchy/fc_aoutput_o" }
   catch { vcd add "$hierarchy/fd_aoutput_o" }
   catch { vcd add "$hierarchy/fe_aoutput_o" }
   catch { vcd add "$hierarchy/ff_aoutput_o" }
   catch { vcd add "$hierarchy/fg_aoutput_o" }
   catch { vcd add "$hierarchy/A_ainput_o" }
   catch { vcd add "$hierarchy/D_ainput_o" }
   catch { vcd add "$hierarchy/C_ainput_o" }
   catch { vcd add "$hierarchy/B_ainput_o" }
}

# ----------------------------------------------------------------
#
proc main { argv } {
#
# Description:	Main entry point to script.  Iterate over all
#		hierarchy levels specified, and direct Questa Intel FPGA (VHDL)
#		to print the relevant signals under each level
#
# ----------------------------------------------------------------

   set vcd_filename "seg_7.vcd"
   set hierarchy "tb_seg_7"

   vcd file "$vcd_filename"
   vcd on

   add_vcd_signals $hierarchy $vcd_filename
}

main $argv
